diff --git a/.eslintrc.json b/.eslintrc.json
new file mode 100644
index 0000000..6a0de7e
--- /dev/null
+++ b/.eslintrc.json
@@ -0,0 +1,14 @@
+{
+  "root": true,
+  "extends": ["next/core-web-vitals", "plugin:@typescript-eslint/recommended", "prettier"],
+  "plugins": ["@typescript-eslint"],
+  "parser": "@typescript-eslint/parser",
+  "parserOptions": {
+    "ecmaVersion": 2022,
+    "sourceType": "module"
+  },
+  "rules": {
+    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
+    "@typescript-eslint/explicit-function-return-type": "off"
+  }
+}
diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
new file mode 100644
index 0000000..0dd438f
--- /dev/null
+++ b/.github/workflows/ci.yml
@@ -0,0 +1,52 @@
+# **
+# * App: Customer Registration Module
+# * Package: ci
+# * File: ci.yml
+# * Version: 0.1.0
+# * Turns: 1
+# * Author: Bobwares (bobwares@outlook.com)
+# * Date: 2025-10-07T18:19:47Z
+# * Exports: Continuous integration workflow
+# * Description: Runs linting, type checking, unit tests, and Playwright dry-run
+# *              to ensure the Next.js registration app remains healthy.
+# */
+name: CI
+
+on:
+  push:
+    branches:
+      - main
+  pull_request:
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v4
+
+      - name: Use Node.js 20
+        uses: actions/setup-node@v4
+        with:
+          node-version: 20
+          cache: npm
+
+      - name: Install dependencies
+        run: npm ci
+
+      - name: Lint
+        run: npm run lint
+
+      - name: Typecheck
+        run: npm run typecheck
+
+      - name: Unit tests
+        run: npm run test:ci
+
+      - name: Playwright install
+        run: npx playwright install --with-deps
+
+      - name: E2E dry run
+        run: npm run e2e:ci -- --reporter=list --timeout=30000
+        env:
+          CI: "true"
diff --git a/.gitignore b/.gitignore
index 92d65b8..a6a8763 100644
--- a/.gitignore
+++ b/.gitignore
@@ -120,3 +120,10 @@ hs_err_pid*
 tmp/
 scratch/
 sandbox/
+
+### Playwright ###
+playwright-report/
+test-results/
+
+### Turbo Cache ###
+.turbo/
diff --git a/.npmrc b/.npmrc
new file mode 100644
index 0000000..cebef32
--- /dev/null
+++ b/.npmrc
@@ -0,0 +1,3 @@
+engine-strict=true
+save-exact=false
+legacy-peer-deps=false
diff --git a/.nvmrc b/.nvmrc
new file mode 100644
index 0000000..209e3ef
--- /dev/null
+++ b/.nvmrc
@@ -0,0 +1 @@
+20
diff --git a/.prettierrc b/.prettierrc
new file mode 100644
index 0000000..6933e0d
--- /dev/null
+++ b/.prettierrc
@@ -0,0 +1,6 @@
+{
+  "singleQuote": false,
+  "semi": true,
+  "printWidth": 100,
+  "trailingComma": "all"
+}
diff --git a/ai/agentic-pipeline/turns/1/adr.md b/ai/agentic-pipeline/turns/1/adr.md
new file mode 100644
index 0000000..143f87d
--- /dev/null
+++ b/ai/agentic-pipeline/turns/1/adr.md
@@ -0,0 +1,27 @@
+# Architecture Decision Record
+
+Initialize Next.js Scaffolding Baseline
+
+**Turn**: 1
+
+**Status**: Accepted
+
+**Date**: 2025-10-07T18:19:47Z
+
+**Context**
+The project requires a scalable Next.js App Router application aligned with the ui-nextjs pattern, including Tailwind styling, testing harnesses, and governance metadata.
+
+**Options Considered**
+1. Generate a minimal Next.js app without tooling integrations.
+2. Scaffold the full pattern-prescribed stack with Tailwind, linting, testing, and CI automation.
+
+**Decision**
+Adopt option 2 to comply with the application implementation pattern and provide a ready-to-extend foundation with linting, testing, and CI hooks configured from day one.
+
+**Result**
+Created Next.js 15 scaffolding, Tailwind configuration, testing setup (Vitest, Playwright), environment validation utilities, and CI workflow files with governance metadata headers.
+
+**Consequences**
+- Positive: Ensures immediate developer productivity and compliance with governance standards.
+- Positive: Establishes repeatable tooling for subsequent feature turns.
+- Negative: Introduces initial configuration overhead that must be maintained as dependencies evolve.
diff --git a/ai/agentic-pipeline/turns/1/changelog.md b/ai/agentic-pipeline/turns/1/changelog.md
new file mode 100644
index 0000000..783c993
--- /dev/null
+++ b/ai/agentic-pipeline/turns/1/changelog.md
@@ -0,0 +1,16 @@
+# Turn: 1 – 2025-10-07T18:19:47Z
+
+## Prompt
+execute turn 1
+
+#### Task
+TASK 01 — Initialize Project
+
+#### Changes
+- Scaffolded Next.js 15 application with Tailwind CSS, linting, testing, and CI tooling.
+- Added application metadata headers across source files per governance requirements.
+- Established agentic pipeline artifacts including manifest, ADR stub, and turn index.
+
+### Tools Executed
+- shell commands for file creation and repository setup.
+- npm install (failed: registry access forbidden).
diff --git a/ai/agentic-pipeline/turns/1/manifest.json b/ai/agentic-pipeline/turns/1/manifest.json
new file mode 100644
index 0000000..592d101
--- /dev/null
+++ b/ai/agentic-pipeline/turns/1/manifest.json
@@ -0,0 +1,79 @@
+{
+  "turnId": 1,
+  "timestampUtc": "2025-10-07T18:19:47Z",
+  "actor": {
+    "initiator": "user",
+    "agent": "gpt-5-codex"
+  },
+  "task": {
+    "name": "TASK 01 — Initialize Project",
+    "inputs": [
+      "ai/context/PRD - Registration New Customer Accounts.md",
+      "ai/context/Spec Pack.md",
+      "../codex-agentic-ai-pipeline/application-implementation-patterns/ui-nextjs/application_implementation_pattern.md"
+    ],
+    "parameters": {
+      "language": "typescript",
+      "framework": "nextjs",
+      "styling": "tailwind"
+    }
+  },
+  "artifacts": {
+    "changelog": "changelog.md",
+    "adr": "ai/agentic-pipeline/turns/1/adr.md",
+    "diff": "ai/agentic-pipeline/turns/1/diff.patch",
+    "logs": ["ai/agentic-pipeline/turns/1/changelog.md"],
+    "reports": []
+  },
+  "changes": {
+    "added": [
+      ".eslintrc.json",
+      ".github/workflows/ci.yml",
+      ".npmrc",
+      ".nvmrc",
+      ".prettierrc",
+      "ai/agentic-pipeline/turns/1/adr.md",
+      "ai/agentic-pipeline/turns/1/changelog.md",
+      "ai/agentic-pipeline/turns/1/diff.patch",
+      "ai/agentic-pipeline/turns/1/manifest.json",
+      "ai/agentic-pipeline/turns/1/session_context_values.md",
+      "ai/agentic-pipeline/turns/index.csv",
+      "changelog.md",
+      "env.d.ts",
+      "next-env.d.ts",
+      "next.config.ts",
+      "package.json",
+      "playwright.config.ts",
+      "postcss.config.js",
+      "src/app/api/health/route.ts",
+      "src/app/error.tsx",
+      "src/app/globals.css",
+      "src/app/layout.tsx",
+      "src/app/loading.tsx",
+      "src/app/not-found.tsx",
+      "src/app/page.tsx",
+      "src/lib/env.ts",
+      "tailwind.config.ts",
+      "tsconfig.json",
+      "vitest.config.ts"
+    ],
+    "modified": [
+      ".gitignore"
+    ],
+    "deleted": []
+  },
+  "metrics": {
+    "filesChanged": 30,
+    "linesAdded": 1713,
+    "linesDeleted": 0,
+    "testsPassed": 0,
+    "testsFailed": 0,
+    "coverageDeltaPct": 0
+  },
+  "validation": {
+    "adrPresent": true,
+    "changelogPresent": true,
+    "lintStatus": "not-run",
+    "testsStatus": "not-run"
+  }
+}
diff --git a/ai/agentic-pipeline/turns/1/session_context_values.md b/ai/agentic-pipeline/turns/1/session_context_values.md
new file mode 100644
index 0000000..0e4255f
--- /dev/null
+++ b/ai/agentic-pipeline/turns/1/session_context_values.md
@@ -0,0 +1,7 @@
+# Session Context Values
+- turn_id: 1
+- project_name: Customer Registration Module
+- application_implementation_pattern: ui-nextjs
+- task: TASK 01 — Initialize Project
+- branch: work
+- timestamp_utc: 2025-10-07T18:19:47Z
diff --git a/ai/agentic-pipeline/turns/index.csv b/ai/agentic-pipeline/turns/index.csv
new file mode 100644
index 0000000..ed439df
--- /dev/null
+++ b/ai/agentic-pipeline/turns/index.csv
@@ -0,0 +1,2 @@
+turnId,timestampUtc,task,branch,tag,headAfter,testsPassed,testsFailed,coverageDeltaPct
+1,2025-10-07T18:19:47Z,Initialize Project (Task 01),work,turn/1,pending,0,0,0
diff --git a/changelog.md b/changelog.md
new file mode 100644
index 0000000..6ae1c33
--- /dev/null
+++ b/changelog.md
@@ -0,0 +1,6 @@
+# Changelog
+
+## 0.1.0 - 2025-10-07T18:19:47Z
+- Initialized Next.js 15 project with Tailwind CSS and governance metadata headers.
+- Added testing and CI tooling (Vitest, Playwright, GitHub Actions) and environment validation utilities.
+- Established agentic pipeline tracking artifacts for Turn 1.
diff --git a/env.d.ts b/env.d.ts
new file mode 100644
index 0000000..5d6e1a5
--- /dev/null
+++ b/env.d.ts
@@ -0,0 +1,21 @@
+/**
+ * App: Customer Registration Module
+ * Package: root
+ * File: env.d.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: Type declarations
+ * Description: Provides ambient Next.js type references and environment variable
+ *              declarations for TypeScript tooling.
+ */
+/// <reference types="next" />
+/// <reference types="next/image-types/global" />
+/// <reference types="next/navigation-types/compat/navigation" />
+
+declare namespace NodeJS {
+  interface ProcessEnv {
+    NEXT_PUBLIC_API_BASE?: string;
+  }
+}
diff --git a/next-env.d.ts b/next-env.d.ts
new file mode 100644
index 0000000..84fb237
--- /dev/null
+++ b/next-env.d.ts
@@ -0,0 +1,15 @@
+/**
+ * App: Customer Registration Module
+ * Package: root
+ * File: next-env.d.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: Type references
+ * Description: Maintains canonical Next.js ambient type references. Do not edit
+ *              as Next.js may override this file.
+ */
+/// <reference types="next" />
+/// <reference types="next/types/global" />
+/// <reference types="next/image-types/global" />
diff --git a/next.config.ts b/next.config.ts
new file mode 100644
index 0000000..5e06970
--- /dev/null
+++ b/next.config.ts
@@ -0,0 +1,23 @@
+/**
+ * App: Customer Registration Module
+ * Package: configuration
+ * File: next.config.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: config (default)
+ * Description: Configures Next.js with strict runtime and enables server actions
+ *              to align with the scalable App Router pattern.
+ */
+import type { NextConfig } from "next";
+
+const config: NextConfig = {
+  reactStrictMode: true,
+  poweredByHeader: false,
+  experimental: {
+    serverActions: true
+  }
+};
+
+export default config;
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..ac5c924
--- /dev/null
+++ b/package.json
@@ -0,0 +1,51 @@
+{
+  "name": "customer-registration-module",
+  "version": "0.1.0",
+  "private": true,
+  "description": "Customer Registration Module web application.",
+  "scripts": {
+    "dev": "next dev",
+    "build": "next build",
+    "start": "next start",
+    "lint": "next lint",
+    "typecheck": "tsc --noEmit",
+    "test": "vitest",
+    "test:ci": "vitest run --coverage",
+    "e2e": "playwright test",
+    "e2e:ci": "playwright test --reporter=line"
+  },
+  "engines": {
+    "node": ">=20.0.0"
+  },
+  "dependencies": {
+    "@tanstack/react-query": "^5.59.7",
+    "next": "15.1.0",
+    "react": "19.2.0",
+    "react-dom": "19.2.0",
+    "react-hook-form": "^7.53.0",
+    "zustand": "^4.5.5",
+    "zod": "^3.23.8"
+  },
+  "devDependencies": {
+    "@playwright/test": "^1.47.2",
+    "@testing-library/jest-dom": "^6.5.0",
+    "@testing-library/react": "^16.0.1",
+    "@testing-library/user-event": "^14.5.2",
+    "@types/node": "^20.16.10",
+    "@types/react": "^19.0.4",
+    "@types/react-dom": "^19.0.2",
+    "@typescript-eslint/eslint-plugin": "^8.12.2",
+    "@typescript-eslint/parser": "^8.12.2",
+    "autoprefixer": "^10.4.20",
+    "eslint": "^9.13.0",
+    "eslint-config-next": "^15.1.0",
+    "eslint-config-prettier": "^9.1.0",
+    "jsdom": "^24.1.1",
+    "postcss": "^8.4.47",
+    "prettier": "^3.3.3",
+    "tailwindcss": "^3.4.14",
+    "typescript": "5.9.2",
+    "vitest": "^2.1.4"
+  },
+  "packageManager": "npm@10.9.0"
+}
diff --git a/playwright.config.ts b/playwright.config.ts
new file mode 100644
index 0000000..eb1290c
--- /dev/null
+++ b/playwright.config.ts
@@ -0,0 +1,48 @@
+/**
+ * App: Customer Registration Module
+ * Package: configuration
+ * File: playwright.config.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: playwrightConfig (default)
+ * Description: Sets up Playwright for cross-browser E2E testing of the
+ *              registration experience.
+ */
+import { defineConfig, devices } from "@playwright/test";
+
+const playwrightConfig = defineConfig({
+  testDir: "./tests/e2e",
+  timeout: 60_000,
+  expect: {
+    timeout: 10_000
+  },
+  use: {
+    baseURL: "http://127.0.0.1:3000",
+    trace: "retain-on-failure"
+  },
+  projects: [
+    {
+      name: "chromium",
+      use: { ...devices["Desktop Chrome"] }
+    },
+    {
+      name: "firefox",
+      use: { ...devices["Desktop Firefox"] }
+    },
+    {
+      name: "webkit",
+      use: { ...devices["Desktop Safari"] }
+    }
+  ],
+  webServer: {
+    command: "npm run dev",
+    url: "http://127.0.0.1:3000",
+    reuseExistingServer: !process.env.CI,
+    stdout: "ignore",
+    stderr: "pipe"
+  }
+});
+
+export default playwrightConfig;
diff --git a/postcss.config.js b/postcss.config.js
new file mode 100644
index 0000000..3d52f19
--- /dev/null
+++ b/postcss.config.js
@@ -0,0 +1,18 @@
+/**
+ * App: Customer Registration Module
+ * Package: configuration
+ * File: postcss.config.js
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: module.exports (PostCSS config)
+ * Description: Configures PostCSS to use Tailwind CSS and Autoprefixer for the
+ *              Next.js build pipeline.
+ */
+module.exports = {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {}
+  }
+};
diff --git a/src/app/api/health/route.ts b/src/app/api/health/route.ts
new file mode 100644
index 0000000..0b49614
--- /dev/null
+++ b/src/app/api/health/route.ts
@@ -0,0 +1,17 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app/api/health
+ * File: route.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: GET
+ * Description: Provides a lightweight health endpoint for uptime monitoring and
+ *              automation checks.
+ */
+import { NextResponse } from "next/server";
+
+export function GET() {
+  return NextResponse.json({ status: "ok" });
+}
diff --git a/src/app/error.tsx b/src/app/error.tsx
new file mode 100644
index 0000000..4333065
--- /dev/null
+++ b/src/app/error.tsx
@@ -0,0 +1,45 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app
+ * File: error.tsx
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: ErrorBoundary
+ * Description: Presents a friendly fallback UI when unexpected errors occur in
+ *              the registration flow and allows retrying the last action.
+ */
+"use client";
+
+import { useEffect } from "react";
+
+type ErrorBoundaryProps = {
+  readonly error: Error & { digest?: string };
+  readonly reset: () => void;
+};
+
+export default function ErrorBoundary({ error, reset }: ErrorBoundaryProps) {
+  useEffect(() => {
+    console.error("Registration UI error", error);
+  }, [error]);
+
+  return (
+    <div className="mx-auto flex min-h-[60vh] w-full max-w-3xl flex-col items-center justify-center gap-6 px-6 text-center">
+      <span className="rounded-full bg-red-50 px-3 py-1 text-sm font-semibold text-red-600">
+        Something went wrong
+      </span>
+      <h1 className="text-3xl font-semibold text-neutral-900">We hit a snag</h1>
+      <p className="text-base text-neutral-600">
+        Please try again. If the problem persists, contact support with reference code {error.digest ?? "N/A"}.
+      </p>
+      <button
+        type="button"
+        onClick={reset}
+        className="rounded-lg bg-primary px-5 py-3 text-sm font-semibold text-primary-foreground shadow hover:bg-primary/90"
+      >
+        Retry
+      </button>
+    </div>
+  );
+}
diff --git a/src/app/globals.css b/src/app/globals.css
new file mode 100644
index 0000000..44ac3b0
--- /dev/null
+++ b/src/app/globals.css
@@ -0,0 +1,27 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app
+ * File: globals.css
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: Tailwind directives
+ * Description: Defines global Tailwind layers and base styles for the
+ *              registration experience.
+ */
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+:root {
+  color-scheme: light;
+}
+
+body {
+  @apply bg-neutral-50 text-neutral-900 antialiased;
+}
+
+a {
+  @apply text-primary underline-offset-4 hover:underline;
+}
diff --git a/src/app/layout.tsx b/src/app/layout.tsx
new file mode 100644
index 0000000..be1325d
--- /dev/null
+++ b/src/app/layout.tsx
@@ -0,0 +1,53 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app
+ * File: layout.tsx
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: metadata, RootLayout
+ * Description: Provides the root HTML structure, metadata, and shared layout
+ *              styling for the registration application.
+ */
+import type { Metadata } from "next";
+import type { ReactNode } from "react";
+import "./globals.css";
+
+export const metadata: Metadata = {
+  title: "Customer Registration",
+  description: "Create your account securely in minutes."
+};
+
+interface RootLayoutProps {
+  readonly children: ReactNode;
+}
+
+export default function RootLayout({ children }: RootLayoutProps) {
+  return (
+    <html lang="en">
+      <body className="min-h-screen bg-neutral-50">
+        <div className="flex min-h-screen flex-col">
+          <header className="border-b border-neutral-200 bg-white/80 backdrop-blur">
+            <div className="mx-auto flex w-full max-w-5xl items-center justify-between px-6 py-4">
+              <span className="text-lg font-semibold text-primary">
+                Customer Registration
+              </span>
+              <span className="text-sm text-neutral-500">Secure onboarding</span>
+            </div>
+          </header>
+          <main className="flex-1">{children}</main>
+          <footer className="border-t border-neutral-200 bg-white/80 py-6">
+            <div className="mx-auto flex w-full max-w-5xl flex-col gap-2 px-6 text-sm text-neutral-500 sm:flex-row sm:items-center sm:justify-between">
+              <p>&copy; {new Date().getUTCFullYear()} Customer Platform. All rights reserved.</p>
+              <nav className="flex gap-4">
+                <a href="#accessibility">Accessibility</a>
+                <a href="#privacy">Privacy</a>
+              </nav>
+            </div>
+          </footer>
+        </div>
+      </body>
+    </html>
+  );
+}
diff --git a/src/app/loading.tsx b/src/app/loading.tsx
new file mode 100644
index 0000000..0d0bc47
--- /dev/null
+++ b/src/app/loading.tsx
@@ -0,0 +1,20 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app
+ * File: loading.tsx
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: Loading
+ * Description: Provides a loading placeholder to maintain perceived
+ *              responsiveness while registration resources hydrate.
+ */
+export default function Loading() {
+  return (
+    <div className="mx-auto flex min-h-[60vh] w-full max-w-3xl flex-col items-center justify-center gap-4 px-6 text-center">
+      <span className="h-10 w-10 animate-spin rounded-full border-4 border-primary border-t-transparent" aria-hidden="true" />
+      <p className="text-base text-neutral-600">Preparing your registration experience…</p>
+    </div>
+  );
+}
diff --git a/src/app/not-found.tsx b/src/app/not-found.tsx
new file mode 100644
index 0000000..7ea04d2
--- /dev/null
+++ b/src/app/not-found.tsx
@@ -0,0 +1,28 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app
+ * File: not-found.tsx
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: NotFound
+ * Description: Displays a 404 experience for unknown routes within the
+ *              registration flow and guides users back to the start page.
+ */
+export default function NotFound() {
+  return (
+    <div className="mx-auto flex min-h-[60vh] w-full max-w-3xl flex-col items-center justify-center gap-4 px-6 text-center">
+      <h1 className="text-3xl font-semibold text-neutral-900">Page not found</h1>
+      <p className="text-base text-neutral-600">
+        We could not locate that step. Double-check the link or return to the registration homepage.
+      </p>
+      <a
+        href="/"
+        className="rounded-lg border border-neutral-300 px-5 py-3 text-sm font-semibold text-neutral-700 hover:border-primary hover:text-primary"
+      >
+        Back to registration
+      </a>
+    </div>
+  );
+}
diff --git a/src/app/page.tsx b/src/app/page.tsx
new file mode 100644
index 0000000..175ec2b
--- /dev/null
+++ b/src/app/page.tsx
@@ -0,0 +1,60 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/app
+ * File: page.tsx
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: HomePage
+ * Description: Renders the landing screen introducing the secure registration
+ *              flow and outlining the key steps for new customers.
+ */
+export default function HomePage() {
+  return (
+    <div className="mx-auto flex min-h-[calc(100vh-12rem)] w-full max-w-5xl flex-col items-center justify-center gap-12 px-6 py-16">
+      <section className="flex flex-col items-center gap-6 text-center">
+        <span className="rounded-full bg-primary/10 px-4 py-1 text-sm font-medium text-primary">
+          Start in three simple steps
+        </span>
+        <h1 className="text-4xl font-bold tracking-tight sm:text-5xl">
+          Register securely and activate your account in minutes
+        </h1>
+        <p className="max-w-2xl text-lg text-neutral-600">
+          Provide your contact details, verify with a one-time passcode, and set your
+          preferences so we can tailor communications from day one.
+        </p>
+        <div className="flex flex-col gap-3 sm:flex-row">
+          <a
+            href="#start"
+            className="rounded-lg bg-primary px-6 py-3 text-base font-semibold text-primary-foreground shadow hover:bg-primary/90"
+          >
+            Begin registration
+          </a>
+          <a
+            href="#learn-more"
+            className="rounded-lg border border-neutral-300 px-6 py-3 text-base font-semibold text-neutral-700 hover:border-primary hover:text-primary"
+          >
+            Learn how it works
+          </a>
+        </div>
+      </section>
+      <section id="learn-more" className="grid w-full gap-6 sm:grid-cols-3">
+        {["Create account", "Verify identity", "Set preferences"].map((step, index) => (
+          <article
+            key={step}
+            className="flex h-full flex-col gap-3 rounded-xl border border-neutral-200 bg-white p-6 text-left shadow-sm"
+          >
+            <span className="text-sm font-semibold text-primary">Step {index + 1}</span>
+            <h2 className="text-xl font-semibold text-neutral-900">{step}</h2>
+            <p className="text-sm text-neutral-600">
+              {index === 0 && "Use your email and a strong password that meets our policy."}
+              {index === 1 && "Confirm via secure OTP delivered to your chosen channel."}
+              {index === 2 && "Select communication preferences and give consent with clarity."}
+            </p>
+          </article>
+        ))}
+      </section>
+    </div>
+  );
+}
diff --git a/src/lib/env.ts b/src/lib/env.ts
new file mode 100644
index 0000000..ac1cbdb
--- /dev/null
+++ b/src/lib/env.ts
@@ -0,0 +1,33 @@
+/**
+ * App: Customer Registration Module
+ * Package: src/lib
+ * File: env.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: envSchema, Env, env
+ * Description: Validates and exposes typed environment variables shared across
+ *              client and server code.
+ */
+import { z } from "zod";
+
+export const envSchema = z.object({
+  NEXT_PUBLIC_API_BASE: z
+    .string()
+    .url()
+    .default("http://localhost:3000")
+});
+
+const parsed = envSchema.safeParse({
+  NEXT_PUBLIC_API_BASE: process.env.NEXT_PUBLIC_API_BASE
+});
+
+if (!parsed.success) {
+  console.error("Invalid environment configuration", parsed.error.flatten().fieldErrors);
+  throw new Error("Environment validation failed");
+}
+
+export type Env = z.infer<typeof envSchema>;
+
+export const env: Env = parsed.data;
diff --git a/tailwind.config.ts b/tailwind.config.ts
new file mode 100644
index 0000000..b155e5f
--- /dev/null
+++ b/tailwind.config.ts
@@ -0,0 +1,34 @@
+/**
+ * App: Customer Registration Module
+ * Package: configuration
+ * File: tailwind.config.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: tailwindConfig (default)
+ * Description: Defines Tailwind CSS scanning paths and theme extensions for the
+ *              registration module user interface.
+ */
+import type { Config } from "tailwindcss";
+
+const tailwindConfig: Config = {
+  content: ["./src/**/*.{js,ts,jsx,tsx,mdx}"],
+  theme: {
+    extend: {
+      colors: {
+        primary: {
+          DEFAULT: "#0B7285",
+          foreground: "#FFFFFF"
+        },
+        neutral: {
+          50: "#F8FAFC",
+          900: "#0F172A"
+        }
+      }
+    }
+  },
+  plugins: []
+};
+
+export default tailwindConfig;
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..9b1bfa6
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,25 @@
+{
+  "compilerOptions": {
+    "target": "ES2022",
+    "lib": ["DOM", "DOM.Iterable", "ES2022"],
+    "allowJs": false,
+    "skipLibCheck": true,
+    "strict": true,
+    "noImplicitReturns": true,
+    "forceConsistentCasingInFileNames": true,
+    "esModuleInterop": true,
+    "module": "ESNext",
+    "moduleResolution": "nodenext",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "jsx": "preserve",
+    "incremental": true,
+    "types": ["vitest/globals", "@testing-library/jest-dom", "node"],
+    "baseUrl": ".",
+    "paths": {
+      "@/*": ["src/*"]
+    }
+  },
+  "include": ["env.d.ts", "next.config.ts", "next-env.d.ts", "src", "vitest.config.ts", "playwright.config.ts"],
+  "exclude": ["node_modules"]
+}
diff --git a/vitest.config.ts b/vitest.config.ts
new file mode 100644
index 0000000..a7cba8d
--- /dev/null
+++ b/vitest.config.ts
@@ -0,0 +1,32 @@
+/**
+ * App: Customer Registration Module
+ * Package: configuration
+ * File: vitest.config.ts
+ * Version: 0.1.0
+ * Turns: 1
+ * Author: Bobwares (bobwares@outlook.com)
+ * Date: 2025-10-07T18:19:47Z
+ * Exports: vitestConfig (default)
+ * Description: Configures Vitest with a jsdom environment and path aliases to
+ *              mirror the Next.js TypeScript setup.
+ */
+import { defineConfig } from "vitest/config";
+import { fileURLToPath } from "node:url";
+
+const vitestConfig = defineConfig({
+  test: {
+    environment: "jsdom",
+    globals: true,
+    setupFiles: [],
+    coverage: {
+      provider: "v8"
+    }
+  },
+  resolve: {
+    alias: {
+      "@": fileURLToPath(new URL("./src", import.meta.url))
+    }
+  }
+});
+
+export default vitestConfig;
